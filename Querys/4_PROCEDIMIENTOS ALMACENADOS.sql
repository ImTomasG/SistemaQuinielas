GO
USE DB_QUINIELAS
GO

IF EXISTS (SELECT * FROM sys.objects WHERE TYPE = 'p' AND name = 'SP_REGISTRO')
DROP PROCEDURE SP_REGISTRO
GO
IF EXISTS (SELECT * FROM sys.objects WHERE TYPE = 'p' AND name = 'SP_CREDENCIALES')
DROP PROCEDURE SP_CREDENCIALES
GO
IF EXISTS (SELECT * FROM sys.objects WHERE TYPE = 'p' AND name = 'SP_ACTUALIZACION_RESULTADOS')
DROP PROCEDURE SP_ACTUALIZACION_RESULTADOS
GO
IF EXISTS (SELECT * FROM sys.objects WHERE TYPE = 'p' AND name = 'SP_POSICION_LIGA')
DROP PROCEDURE SP_POSICION_LIGA
GO
IF EXISTS (SELECT * FROM sys.objects WHERE TYPE = 'p' AND name = 'SP_PRIMEROSLUGARES_PREMIOS')
DROP PROCEDURE SP_PRIMEROSLUGARES_PREMIOS
GO
IF EXISTS (SELECT * FROM sys.objects WHERE TYPE = 'p' AND name = 'SP_LIGAGANADORA_PREMIOS')
DROP PROCEDURE SP_LIGAGANADORA_PREMIOS
GO


/*CREACION DE CUENTAS*/
CREATE PROC SP_REGISTRO(
@NOMBRES VARCHAR (50),
@APELLIDOS VARCHAR (50),
@TELEFONO INTEGER,
@EMAIL VARCHAR (30),
@PASSWORD VARCHAR (30)
)AS
DECLARE @CONTADOR INT
--VERIFICA SI EL EMAIL YA SE ENCUENTRA REGISTRADO
SELECT @CONTADOR = COUNT(U.ID_USUARIO) FROM USUARIO U WHERE U.CORREO = @EMAIL

IF(@CONTADOR < 1)
	BEGIN
		INSERT INTO USUARIO(NOMBRES,APELLIDOS,TELEFONO,CORREO,CONTRASEÑA)
		VALUES(@NOMBRES,@APELLIDOS,@TELEFONO,@EMAIL,@PASSWORD)
	END
ELSE
	BEGIN
		SELECT 'El correo ingresado se encuentra repetido, por favor inténtelo nuevamente.' AS MENSAJE_ERROR
	END



GO


/*INICIO DE SESIÓN EN EL SISTEMA*/
CREATE PROC SP_CREDENCIALES(
@EMAIL VARCHAR (30),
@PASSWORD VARCHAR (30)
)AS
BEGIN
SELECT U.ID_USUARIO, U.NOMBRES, U.APELLIDOS, U.TELEFONO, U.CORREO
FROM USUARIO U
WHERE U.CORREO = @EMAIL AND U.CONTRASEÑA = @PASSWORD
END
GO



/*INGRESO POR PARTE DE LA ADMINISTRACION LOS RESULTADOS FINALES DE CADA ENCUENTRO (GOLES DE LOCAL Y GOLES DE VISITANTE) Y ENTREGA DE PUNTOS A CADA APUESTA DE LOS USUARIOS*/
CREATE PROC SP_ACTUALIZACION_RESULTADOS(
@ID_JORNADA VARCHAR (10),
@ID_EQUIPOLOCAL VARCHAR (10),
@ID_EQUIPOVISITANTE VARCHAR(10),
@GOLES_LOCAL INTEGER,
@GOLES_VISITANTE INTEGER
)AS
DECLARE @CONTADOR INT
--VERIFICA SI EN LA JORNADA INGRESADA POR EL USUARIO SE ENFRENTARON EL EQUIPO LOCAL Y EL EQUIPO VISITANTE
SELECT @CONTADOR = COUNT(ID_JORNADA) FROM PARTIDOS P WHERE P.ID_JORNADA = @ID_JORNADA AND P.ID_EQUIPOLOCAL = @ID_EQUIPOLOCAL AND P.ID_EQUIPOVISITANTE = @ID_EQUIPOVISITANTE

IF(@CONTADOR > 0)
	BEGIN
		--ACTUALIACIÓN DEL RESULTADO DE LOS PARTIDOS EN LA TABLA PARTIDOS
		UPDATE PARTIDOS SET
		GOLES_LOCAL = @GOLES_LOCAL,
		GOLES_VISITANTE = @GOLES_VISITANTE
		WHERE ID_JORNADA = @ID_JORNADA AND ID_EQUIPOLOCAL = @ID_EQUIPOLOCAL AND ID_EQUIPOVISITANTE = @ID_EQUIPOVISITANTE

		--ASIGNACIÓN DE PUNTOS A LOS USUARIOS DE ACUERDO AL RESULTADO DEL PARTIDO INGRESADO
		IF(@GOLES_LOCAL>@GOLES_VISITANTE)
			BEGIN
				UPDATE APUESTA SET
				PUNTOS_OBTENIDOS = 1
				WHERE ID_JORNADA = @ID_JORNADA AND ID_EQUIPOLOCAL = @ID_EQUIPOLOCAL AND ID_EQUIPOVISITANTE = @ID_EQUIPOVISITANTE AND APUESTA_LOCAL > APUESTA_VISITANTE

				UPDATE APUESTA SET
				PUNTOS_OBTENIDOS = 3
				WHERE ID_JORNADA = @ID_JORNADA AND ID_EQUIPOLOCAL = @ID_EQUIPOLOCAL AND ID_EQUIPOVISITANTE = @ID_EQUIPOVISITANTE AND APUESTA_LOCAL = @GOLES_LOCAL AND APUESTA_VISITANTE = @GOLES_VISITANTE
			END
		ELSE IF(@GOLES_LOCAL<@GOLES_VISITANTE)
			BEGIN
				UPDATE APUESTA SET
				PUNTOS_OBTENIDOS = 1
				WHERE ID_JORNADA = @ID_JORNADA AND ID_EQUIPOLOCAL = @ID_EQUIPOLOCAL AND ID_EQUIPOVISITANTE = @ID_EQUIPOVISITANTE AND APUESTA_LOCAL < APUESTA_VISITANTE

				UPDATE APUESTA SET
				PUNTOS_OBTENIDOS = 3
				WHERE ID_JORNADA = @ID_JORNADA AND ID_EQUIPOLOCAL = @ID_EQUIPOLOCAL AND ID_EQUIPOVISITANTE = @ID_EQUIPOVISITANTE AND APUESTA_LOCAL = @GOLES_LOCAL AND APUESTA_VISITANTE = @GOLES_VISITANTE
			END
		ELSE
			BEGIN
				UPDATE APUESTA SET
				PUNTOS_OBTENIDOS = 1
				WHERE ID_JORNADA = @ID_JORNADA AND ID_EQUIPOLOCAL = @ID_EQUIPOLOCAL AND ID_EQUIPOVISITANTE = @ID_EQUIPOVISITANTE AND APUESTA_LOCAL = APUESTA_VISITANTE

				UPDATE APUESTA SET
				PUNTOS_OBTENIDOS = 3
				WHERE ID_JORNADA = @ID_JORNADA AND ID_EQUIPOLOCAL = @ID_EQUIPOLOCAL AND ID_EQUIPOVISITANTE = @ID_EQUIPOVISITANTE AND APUESTA_LOCAL = @GOLES_LOCAL AND APUESTA_VISITANTE = @GOLES_VISITANTE
			END

	END
ELSE
	BEGIN
		SELECT 'El partido no existe, por favor inténtalo nuevamente.' AS MENSAJE_ERROR
	END
GO




/*Mostrar las posiciones de cada usuario de acuerdo a los puntos acumulados que posea*/
CREATE PROC SP_POSICION_LIGA(
@ID_LIGA INTEGER
)AS
BEGIN
	SELECT L.ID_LIGA,L.NOMBRE_LIGA,U.ID_USUARIO,U.NOMBRES,U.APELLIDOS,SUM(A.PUNTOS_OBTENIDOS) AS ACUMULACION_PUNTOS
	FROM USUARIO U
	JOIN USUARIOLIGA UL ON U.ID_USUARIO = UL.ID_USUARIO
	JOIN LIGA L ON UL.ID_LIGA = L.ID_LIGA
	JOIN APUESTA A ON UL.ID_USUARIO = A.ID_USUARIO AND UL.ID_LIGA = A.ID_LIGA AND UL.ID_ROL = A.ID_ROL
	WHERE L.ID_LIGA = @ID_LIGA
	GROUP BY L.ID_LIGA,L.NOMBRE_LIGA,U.ID_USUARIO,U.NOMBRES,U.APELLIDOS
	ORDER BY 1 ASC, 6 DESC

END
GO




/*EXTRAER EL 1% DE TODAS LAS LIGAS Y EL 0.5% REPARTIRLO ENTRE LOS TRES PRIMEROS LUGARES DE CADA LIGA CONFIGURADA COMO DE APUESTAS*/
CREATE PROC SP_PRIMEROSLUGARES_PREMIOS
AS

--SE DECLARA LA VARIABLE QUE ALMACENARÁ LA REPARTICIÓN DEL 0.5% DEL 1% DEL PAGO DE TODAS LAS LIGAS CONFIGURADAS COMO TIPO DE APUESTAS
DECLARE @CANTIDAD NUMERIC (10,2)
--SE DECLARA VARIABLE PARA CONTAR LA CANTIDAD DE LIGAS QUE SON CONFIGURADAS COMO TIPO APUESTA
DECLARE @CONTADOR INTEGER

--SE REGISTRA LA CANTIDAD DE LIGAS TIPO APUSETA
SELECT @CONTADOR = COUNT(L.ID_LIGA) FROM LIGA L WHERE L.ID_TIPOLIGA = 1
--SE ASIGNA EL 0.5% DEL 1% DE LAS LIGAS TIPO APUESTA
SELECT @CANTIDAD = (((SUM(P.MONTO)*0.005)/@CONTADOR)/3) FROM LIGA L JOIN USUARIOLIGA UL ON L.ID_LIGA = UL.ID_LIGA JOIN PAGO P ON UL.ID_USUARIO = P.ID_USUARIO AND UL.ID_LIGA = P.ID_LIGA AND UL.ID_ROL = P.ID_ROL WHERE L.ID_TIPOLIGA = 1


BEGIN
	WITH POSICIONES AS
	(
	SELECT L.ID_LIGA,L.NOMBRE_LIGA,U.ID_USUARIO,U.NOMBRES,U.APELLIDOS,SUM(A.PUNTOS_OBTENIDOS) AS ACUMULACION_PUNTOS, ROW_NUMBER() OVER(PARTITION BY L.ID_LIGA ORDER BY SUM(A.PUNTOS_OBTENIDOS) DESC) AS POSICIONFILAS
	FROM USUARIO U
	JOIN USUARIOLIGA UL ON U.ID_USUARIO = UL.ID_USUARIO
	JOIN LIGA L ON UL.ID_LIGA = L.ID_LIGA
	JOIN APUESTA A ON UL.ID_USUARIO = A.ID_USUARIO AND UL.ID_LIGA = A.ID_LIGA AND UL.ID_ROL = A.ID_ROL
	WHERE L.ID_TIPOLIGA = 1

	GROUP BY L.ID_LIGA,L.NOMBRE_LIGA,U.ID_USUARIO,U.NOMBRES,U.APELLIDOS
	)
	SELECT *, @CANTIDAD AS CANTIDAD
	FROM POSICIONES
	WHERE POSICIONFILAS <= 3;

END
GO





/*EL OTRO 0.5% SE REPARTE PARA PREMIAR A LA LIGA QUE EN PROMEDIO TENDRÁ MÁS PUNTOS ACUMULADOS A CADA PARTICIPANTE DE LA LIGA*/
CREATE PROC SP_LIGAGANADORA_PREMIOS
AS

--SE DECLARA LA VARIABLE QUE ALMACENARÁ EL ID DE LA LIGA QUE POSEE UN MEJOR PROMEDIO DE PUNTUACION DE TODAS LAS LIGAS CONFIGURADAS COMO DE APUESTA
DECLARE @LIGA_GANADORA INTEGER
--SE DECLARA VARIABLE CONTADOR PARA CONTAR CUANTAS PERSONAS SE ENCUENTRAN EN LA LIGA CON MEJOR PROMEDIO DE PUNTUACIÓN DE TODAS LAS LIGAS CONFIGURADAS COMO APUESTA
DECLARE @CONTADOR INTEGER
--SE DECLARA LA VARIABLE QUE ALMACENARÁ LA REPARTICIÓN DEL 0.5% DEL 1% DEL PAGO DE TODAS LAS LIGAS CONFIGURADAS COMO TIPO DE APUESTAS
DECLARE @CANTIDAD NUMERIC (10,2)



--SE ALMACENA EN LA VARIABLE "LIGA_GANADORA" LA LIGA QUE POSEE EL MEJOR PROMEDIO DE PUNTUACIÓN DE TODAS LAS LIGAS CONFIGURADAS COMO DE APUESTA
SELECT @LIGA_GANADORA = GANADOR.ID_LIGA
FROM
(
	SELECT TOP 1 CONTEO.ID_LIGA, AVG(CAST(CONTEO.ACUMULACION_PUNTOS AS FLOAT)) PROMEDIO_PUNTAJE
	FROM
	(
		SELECT L.ID_LIGA,U.ID_USUARIO,SUM(A.PUNTOS_OBTENIDOS) AS ACUMULACION_PUNTOS
		FROM USUARIO U
		JOIN USUARIOLIGA UL ON U.ID_USUARIO = UL.ID_USUARIO
		JOIN LIGA L ON UL.ID_LIGA = L.ID_LIGA
		JOIN APUESTA A ON UL.ID_USUARIO = A.ID_USUARIO AND UL.ID_LIGA = A.ID_LIGA AND UL.ID_ROL = A.ID_ROL
		WHERE L.ID_TIPOLIGA = 1
		GROUP BY L.ID_LIGA,L.NOMBRE_LIGA,U.ID_USUARIO,U.NOMBRES,U.APELLIDOS
	) AS CONTEO
	GROUP BY CONTEO.ID_LIGA
	ORDER BY 2 DESC
) AS GANADOR
--SE REGISTRA LA CANTIDAD DE PERSONAS QUE PERTENECEN A LA LIGA GANADORA
SELECT @CONTADOR = COUNT(UL.ID_USUARIO) FROM USUARIOLIGA UL WHERE UL.ID_LIGA = @LIGA_GANADORA
--SE ASIGNA EL 0.5% DEL 1% DE LAS LIGAS TIPO APUESTA
SELECT @CANTIDAD = ((SUM(P.MONTO)*0.005)/@CONTADOR) FROM LIGA L JOIN USUARIOLIGA UL ON L.ID_LIGA = UL.ID_LIGA JOIN PAGO P ON UL.ID_USUARIO = P.ID_USUARIO AND UL.ID_LIGA = P.ID_LIGA AND UL.ID_ROL = P.ID_ROL WHERE L.ID_TIPOLIGA = 1


BEGIN
	SELECT L.ID_LIGA,L.NOMBRE_LIGA,U.ID_USUARIO,U.NOMBRES,U.APELLIDOS, @CANTIDAD AS MONTO_ASIGNADO
	FROM USUARIO U
	JOIN USUARIOLIGA UL ON U.ID_USUARIO = UL.ID_USUARIO
	JOIN LIGA L ON UL.ID_LIGA = L.ID_LIGA
	JOIN APUESTA A ON UL.ID_USUARIO = A.ID_USUARIO AND UL.ID_LIGA = A.ID_LIGA AND UL.ID_ROL = A.ID_ROL
	WHERE L.ID_TIPOLIGA = 1 AND L.ID_LIGA = @LIGA_GANADORA

	GROUP BY L.ID_LIGA,L.NOMBRE_LIGA,U.ID_USUARIO,U.NOMBRES,U.APELLIDOS
END
GO








